# Global variables:
MODEL = HKY85

# Sequences:

# The alphabet to use:
# DNA, RNA or Protein
alphabet=DNA

#----------------------------------------------------------------------------------------
#                                            Input data
#----------------------------------------------------------------------------------------

# The sequence file to use (sequences must be aligned!)
input.sequence.file=ex.fa

# The alignment format:
input.sequence.format=Fasta

#Sites to use:
# all, nogap or complete (=only resolved chars)
input.sequence.sites_to_use = all

# Specify a maximum amount of gaps: may be an absolute number or a percentage.
input.sequence.max_gap_allowed = 50%
input.sequence.max_unresolved_allowed = 100%

# ----------------------------------------------------------------------------------------
#                                     Input tree file
# ----------------------------------------------------------------------------------------

input.tree.file = ex.dnd
input.tree.format = Newick


# ----------------------------------------------------------------------------------------
#                                     Model specification
# ----------------------------------------------------------------------------------------
#

model = $(MODEL)(theta=0.3)


# Likelihood recursion option:
# - simple: derivatives takes more time to compute, but likelihood computation is faster.
#   For big data sets, it can save a lot of memory usage too, particularly when the data are compressed.
# - double: Uses more memory and need more time to compute likelihood, due to the double recursion.
#   Analytical derivatives are however faster to compute.

likelihood.recursion = simple

# Site compression for the simple recursion:
# - simple: identical sites are not computed twice
# - recursive: look for site patterns to save computation time during optimization, but
#   requires extra time for building the patterns.
#   This is usually the best option, particularly for nucleotide data sets.

likelihood.recursion_simple.compression = recursive

# ----------------------------------------------------------------------------------------
#                                     Optimization
# ----------------------------------------------------------------------------------------

# Should we reestimate likelihood parameters? Tree topology will not be optimized.
# (recommanded)
# Method to use for optimizing numerical parameters:
# - None, no optimization performed
# - DB derivatives for branch lengths + Brent for other parameters
# - FullD derivatives for all parameters, using numerical derivatives for non-branch lengths parameters.
optimization = FullD(derivatives=Newton)

# Parameters to ignore (for instance equilibrium frequencies)
optimization.ignore_parameters =

# Maximum number of likelihood evaluations:
optimization.max_number_f_eval = 10000

# Precision to reach:
optimization.tolerance = 0.000001

#----------------------------------------------------------------------------------------
#                                Output
#----------------------------------------------------------------------------------------


# Should we write the resulting tree? none or file name.
output.tree.file = ex_$(MODEL)_ml.dnd
output.tree.format = Newick

# Alignment information log file (site specific rates, etc):
output.infos = ex_$(MODEL).infos

# Write numerical parameter estimated values:
output.estimates = ex_$(MODEL).params

